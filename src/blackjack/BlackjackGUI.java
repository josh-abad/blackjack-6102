/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package blackjack;

import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JLabel;

public class BlackjackGUI extends javax.swing.JFrame {

    private final Deck deck;
    private final Player player;
    private final Dealer dealer;
    private int pot;
    private final int minimumBet;
    private final JLabel[] playerHand;
    private final JLabel[] dealerHand;
    private final JButton[] playOptions;
    private final JButton[] betOptions;
    /**
     * Creates new form BlackjackGUI
     */
    public BlackjackGUI() {
        deck = new Deck();
        player = new Player();
        dealer = new Dealer();
        pot = 0;
        minimumBet = 25;
        initComponents();

        playerHand = new JLabel[6];
        playerHand[0] = lbPlayerCard1;
        playerHand[1] = lbPlayerCard2;
        playerHand[2] = lbPlayerCard3;
        playerHand[3] = lbPlayerCard4;
        playerHand[4] = lbPlayerCard5;
        playerHand[5] = lbPlayerCard6;

        dealerHand = new JLabel[6];
        dealerHand[0] = lbDealerCard1;
        dealerHand[1] = lbDealerCard2;
        dealerHand[2] = lbDealerCard3;
        dealerHand[3] = lbDealerCard4;
        dealerHand[4] = lbDealerCard5;
        dealerHand[5] = lbDealerCard6;
        
        playOptions = new JButton[4];
        playOptions[0] = btnHit;
        playOptions[1] = btnStand;
        playOptions[2] = btnDoubleDown;
        playOptions[3] = btnSurrender;

        betOptions = new JButton[5];
        betOptions[0] = btn5Chips;
        betOptions[1] = btn10Chips;
        betOptions[2] = btn25Chips;
        betOptions[3] = btn50Chips;
        betOptions[4] = btn100Chips;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btn5Chips = new javax.swing.JButton();
        btn10Chips = new javax.swing.JButton();
        btn25Chips = new javax.swing.JButton();
        btn50Chips = new javax.swing.JButton();
        btn100Chips = new javax.swing.JButton();
        lbBet = new javax.swing.JLabel();
        btnHit = new javax.swing.JButton();
        btnStand = new javax.swing.JButton();
        btnDoubleDown = new javax.swing.JButton();
        btnSurrender = new javax.swing.JButton();
        btnDeal = new javax.swing.JButton();
        btnNextHand = new javax.swing.JButton();
        btnQuitGame = new javax.swing.JButton();
        pnlDealerHand = new javax.swing.JPanel();
        lbDealerCard1 = new javax.swing.JLabel();
        lbDealerCard2 = new javax.swing.JLabel();
        lbDealerCard3 = new javax.swing.JLabel();
        lbDealerCard4 = new javax.swing.JLabel();
        lbDealerCard5 = new javax.swing.JLabel();
        lbDealerCard6 = new javax.swing.JLabel();
        pnlPlayerHand = new javax.swing.JPanel();
        lbPlayerCard1 = new javax.swing.JLabel();
        lbPlayerCard2 = new javax.swing.JLabel();
        lbPlayerCard3 = new javax.swing.JLabel();
        lbPlayerCard4 = new javax.swing.JLabel();
        lbPlayerCard5 = new javax.swing.JLabel();
        lbPlayerCard6 = new javax.swing.JLabel();
        pnlMessage = new javax.swing.JPanel();
        lbMessage = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lbPotValue = new javax.swing.JLabel();
        lbPot = new javax.swing.JLabel();
        lbChipsValue = new javax.swing.JLabel();
        lbChips = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Blackjack");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn5Chips.setText("5");
        btn5Chips.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ChipsActionPerformed(evt);
            }
        });

        btn10Chips.setText("10");
        btn10Chips.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn10ChipsActionPerformed(evt);
            }
        });

        btn25Chips.setText("25");
        btn25Chips.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn25ChipsActionPerformed(evt);
            }
        });

        btn50Chips.setText("50");
        btn50Chips.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn50ChipsActionPerformed(evt);
            }
        });

        btn100Chips.setText("100");
        btn100Chips.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn100ChipsActionPerformed(evt);
            }
        });

        lbBet.setText("Bet");

        btnHit.setText("Hit");
        btnHit.setEnabled(false);
        btnHit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHitActionPerformed(evt);
            }
        });

        btnStand.setText("Stand");
        btnStand.setEnabled(false);
        btnStand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStandActionPerformed(evt);
            }
        });

        btnDoubleDown.setText("Double Down");
        btnDoubleDown.setEnabled(false);

        btnSurrender.setText("Surrender");
        btnSurrender.setEnabled(false);
        btnSurrender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSurrenderActionPerformed(evt);
            }
        });

        btnDeal.setText("Deal");
        btnDeal.setEnabled(false);
        btnDeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDealActionPerformed(evt);
            }
        });

        btnNextHand.setText("Next Hand");
        btnNextHand.setEnabled(false);
        btnNextHand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextHandActionPerformed(evt);
            }
        });

        btnQuitGame.setText("Quit Game");
        btnQuitGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitGameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbBet)
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnDeal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNextHand)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnQuitGame)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btn5Chips)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn10Chips)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn25Chips)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn50Chips)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn100Chips))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnHit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnStand)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDoubleDown)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSurrender)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btn100Chips)
                    .addComponent(btn50Chips)
                    .addComponent(btn25Chips)
                    .addComponent(btn10Chips)
                    .addComponent(btn5Chips)
                    .addComponent(lbBet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnHit)
                    .addComponent(btnStand)
                    .addComponent(btnDoubleDown)
                    .addComponent(btnSurrender))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeal)
                    .addComponent(btnNextHand)
                    .addComponent(btnQuitGame))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlDealerHand.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dealer"));

        lbDealerCard1.setText("Empty");

        lbDealerCard2.setText("Empty");

        lbDealerCard3.setText("Empty");

        lbDealerCard4.setText("Empty");

        lbDealerCard5.setText("Empty");

        lbDealerCard6.setText("Empty");

        javax.swing.GroupLayout pnlDealerHandLayout = new javax.swing.GroupLayout(pnlDealerHand);
        pnlDealerHand.setLayout(pnlDealerHandLayout);
        pnlDealerHandLayout.setHorizontalGroup(
            pnlDealerHandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDealerHandLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(lbDealerCard1)
                .addGap(72, 72, 72)
                .addComponent(lbDealerCard2)
                .addGap(72, 72, 72)
                .addComponent(lbDealerCard3)
                .addGap(72, 72, 72)
                .addComponent(lbDealerCard4)
                .addGap(72, 72, 72)
                .addComponent(lbDealerCard5)
                .addGap(72, 72, 72)
                .addComponent(lbDealerCard6)
                .addContainerGap(68, Short.MAX_VALUE))
        );
        pnlDealerHandLayout.setVerticalGroup(
            pnlDealerHandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDealerHandLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(pnlDealerHandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDealerCard1)
                    .addComponent(lbDealerCard2)
                    .addComponent(lbDealerCard3)
                    .addComponent(lbDealerCard4)
                    .addComponent(lbDealerCard5)
                    .addComponent(lbDealerCard6))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pnlPlayerHand.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Player (" + this.player.stand() + ")"));

        lbPlayerCard1.setText("Empty");

        lbPlayerCard2.setText("Empty");

        lbPlayerCard3.setText("Empty");

        lbPlayerCard4.setText("Empty");

        lbPlayerCard5.setText("Empty");

        lbPlayerCard6.setText("Empty");

        javax.swing.GroupLayout pnlPlayerHandLayout = new javax.swing.GroupLayout(pnlPlayerHand);
        pnlPlayerHand.setLayout(pnlPlayerHandLayout);
        pnlPlayerHandLayout.setHorizontalGroup(
            pnlPlayerHandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPlayerHandLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(lbPlayerCard1)
                .addGap(72, 72, 72)
                .addComponent(lbPlayerCard2)
                .addGap(72, 72, 72)
                .addComponent(lbPlayerCard3)
                .addGap(72, 72, 72)
                .addComponent(lbPlayerCard4)
                .addGap(72, 72, 72)
                .addComponent(lbPlayerCard5)
                .addGap(72, 72, 72)
                .addComponent(lbPlayerCard6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlPlayerHandLayout.setVerticalGroup(
            pnlPlayerHandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPlayerHandLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pnlPlayerHandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPlayerCard1)
                    .addComponent(lbPlayerCard2)
                    .addComponent(lbPlayerCard3)
                    .addComponent(lbPlayerCard4)
                    .addComponent(lbPlayerCard5)
                    .addComponent(lbPlayerCard6))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pnlMessage.setBackground(new java.awt.Color(153, 153, 153));
        pnlMessage.setOpaque(false);

        javax.swing.GroupLayout pnlMessageLayout = new javax.swing.GroupLayout(pnlMessage);
        pnlMessage.setLayout(pnlMessageLayout);
        pnlMessageLayout.setHorizontalGroup(
            pnlMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMessageLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lbMessage)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        pnlMessageLayout.setVerticalGroup(
            pnlMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMessageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbMessage)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText(
            String.valueOf(this.minimumBet)
        );

        jLabel1.setText("Minimum Bet:");

        lbPotValue.setText(String.valueOf(this.pot)
        );

        lbPot.setText("Pot:");

        lbChipsValue.setText(String.valueOf(this.player.getChips()));

        lbChips.setText("Chips:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbPot)
                    .addComponent(lbChips)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbChipsValue)
                    .addComponent(lbPotValue)
                    .addComponent(jLabel2))
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbChips)
                        .addComponent(lbChipsValue))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbPotValue)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lbPot)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))))))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlPlayerHand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDealerHand, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDealerHand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(pnlPlayerHand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn5ChipsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ChipsActionPerformed
        bet(5);
    }//GEN-LAST:event_btn5ChipsActionPerformed

    private void btn10ChipsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn10ChipsActionPerformed
        bet(10);
    }//GEN-LAST:event_btn10ChipsActionPerformed

    private void btn25ChipsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn25ChipsActionPerformed
        bet(25);
    }//GEN-LAST:event_btn25ChipsActionPerformed

    private void btn50ChipsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn50ChipsActionPerformed
        bet(50);
    }//GEN-LAST:event_btn50ChipsActionPerformed

    private void btn100ChipsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn100ChipsActionPerformed
        bet(100);
    }//GEN-LAST:event_btn100ChipsActionPerformed

    private void displayMessage(String message, Color color) {
        if (!pnlMessage.isVisible()) {
            pnlMessage.setVisible(true);
        }
        if (!pnlMessage.isOpaque()) {
            pnlMessage.setOpaque(true);
        }
        pnlMessage.setBackground(color);
        lbMessage.setText(message);
    }

    private void displayMessage(String message) {
        displayMessage(message, new Color(153, 153, 153));
        if (pnlMessage.isOpaque()) {
            pnlMessage.setOpaque(false);
        }
    }

    private void clearMessage() {
        lbMessage.setText("");
        if (pnlMessage.isOpaque()) {
            pnlMessage.setOpaque(false);
        }
    }
   
    private void btnHitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHitActionPerformed
        Card card = deck.getCard();
        player.hit(card);

        displayMessage("You drew " + card);
        pnlPlayerHand.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Player (" + player.stand() + ")"));
        
        int i = 0;
        for (JLabel playerCard : playerHand) {
            if (playerCard.getText().equals("Empty")) {
                playerCard.setText(card.toString());
                if (i == 5) {
                    btnHit.setEnabled(false);
                    btnDoubleDown.setEnabled(false);
                }
                break;
            }
        }
        
        if (player.stand() > 21) {
            btnHit.setEnabled(false);
            btnDoubleDown.setEnabled(false);
            btnSurrender.setEnabled(false);
        }
    }//GEN-LAST:event_btnHitActionPerformed

    private void btnSurrenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSurrenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSurrenderActionPerformed

    private void btnDealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDealActionPerformed
        for (JButton betOption : betOptions) {
            betOption.setEnabled(false);
        }

        for (JButton playOption : playOptions) {
            playOption.setEnabled(true);
        }
        
        for (int i = 0; i < 2; i++) {
            Card playerCard = deck.getCard();
            Card dealerCard = deck.getCard();
            player.hit(playerCard);
            dealer.hit(dealerCard);
            if (i == 0) {
                lbPlayerCard1.setText(playerCard.toString());
                lbDealerCard1.setText("Hidden");
            } else {
                lbPlayerCard2.setText(playerCard.toString());
                lbDealerCard2.setText(dealerCard.toString());
            }
        }
        btnDeal.setEnabled(false);
        pnlPlayerHand.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Player (" + player.stand() + ")"));
    }//GEN-LAST:event_btnDealActionPerformed

    private void btnQuitGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitGameActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnQuitGameActionPerformed

    private void setOptions(JButton[] options, boolean state) {
        for (JButton option : options) {
            if (option.isEnabled() != state) {
                option.setEnabled(state);
            }
        }
    }

    private void btnStandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStandActionPerformed
        setOptions(playOptions, false);
        pnlMessage.setVisible(true);
        lbDealerCard1.setText(dealer.getHand().get(0).toString());

        if (dealer.hasSoft17() || dealer.stand() <= 16) {
            Card card = deck.getCard();
            dealer.hit(card);
            for (JLabel cardLabel : dealerHand) {
                if (cardLabel.getText().equals("Empty")) {
                    cardLabel.setText(card.toString());
                    break;
                }
            }
        }

        final int playerHand = player.stand();
        final int dealerHand = dealer.stand();

        pnlDealerHand.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Dealer (" + dealerHand + ")"));

        Player winner = null;
        if (player.isBelowLimit() && dealer.isBelowLimit()) {
            if (playerHand == dealerHand) {
                lbMessage.setText("Draw");
                player.addChips(pot / 2);
                dealer.addChips(pot / 2);
                pot = 0;
            } else {
                winner = playerHand > dealerHand ? player : dealer;
            }
        } else if (playerHand > 21 ^ dealerHand > 21){
            winner = playerHand <= 21 ? player : dealer;
        } else {
            displayMessage("You lost", Color.red);
        }

        if (winner != null) {
            if (winner instanceof Dealer) {
                if (dealer.hasBlackjack()) {
                    displayMessage("The Dealer got blackjack", Color.red);
                } else {
                    displayMessage("The Dealer won this round", Color.red);
                }
                dealer.addChips(pot);
                pot = 0;
            } else {
                if (player.hasBlackjack()) {
                    displayMessage("You got blackjack", Color.green);
                } else {
                    displayMessage("You won this round", Color.green);
                }
                player.addChips(pot);
                pot = 0;
            }
        }
        if (player.getChips() <= 0 || dealer.getChips() <= 0) {
            displayMessage((player.getChips() > 0) ? "You won the game" : "You lost the game",
                    (player.getChips() > 0) ? Color.green : Color.red);
        } else {
            btnNextHand.setEnabled(true);
        }
    }//GEN-LAST:event_btnStandActionPerformed

    private void btnNextHandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextHandActionPerformed
        for (JLabel cardLabel : playerHand) {
            cardLabel.setText("Empty");
        }

        for (JLabel cardLabel : dealerHand) {
            cardLabel.setText("Empty");
        }

        setOptions(betOptions, true);

        clearMessage();
        lbChipsValue.setText(String.valueOf(player.getChips()));
        btnNextHand.setEnabled(false);
        player.resetHand(this.deck);
        dealer.resetHand(this.deck);
        pnlPlayerHand.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Player (" + player.stand() + ")"));
        pnlDealerHand.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Dealer"));
    }//GEN-LAST:event_btnNextHandActionPerformed

    private void bet(int amount) {
        pot += player.bet(amount);
        pot += dealer.bet(amount);
        lbPotValue.setText(String.valueOf(pot));
        lbChipsValue.setText(String.valueOf(player.getChips()));
        if (pot / 2 >= minimumBet) {
            btnDeal.setEnabled(true);
        }
    }

    private void toggleOptions(JButton[] options) {
        for (JButton option : options) {
            option.setEnabled(!option.isEnabled());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BlackjackGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BlackjackGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BlackjackGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BlackjackGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BlackjackGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn100Chips;
    private javax.swing.JButton btn10Chips;
    private javax.swing.JButton btn25Chips;
    private javax.swing.JButton btn50Chips;
    private javax.swing.JButton btn5Chips;
    private javax.swing.JButton btnDeal;
    private javax.swing.JButton btnDoubleDown;
    private javax.swing.JButton btnHit;
    private javax.swing.JButton btnNextHand;
    private javax.swing.JButton btnQuitGame;
    private javax.swing.JButton btnStand;
    private javax.swing.JButton btnSurrender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbBet;
    private javax.swing.JLabel lbChips;
    private javax.swing.JLabel lbChipsValue;
    private javax.swing.JLabel lbDealerCard1;
    private javax.swing.JLabel lbDealerCard2;
    private javax.swing.JLabel lbDealerCard3;
    private javax.swing.JLabel lbDealerCard4;
    private javax.swing.JLabel lbDealerCard5;
    private javax.swing.JLabel lbDealerCard6;
    private javax.swing.JLabel lbMessage;
    private javax.swing.JLabel lbPlayerCard1;
    private javax.swing.JLabel lbPlayerCard2;
    private javax.swing.JLabel lbPlayerCard3;
    private javax.swing.JLabel lbPlayerCard4;
    private javax.swing.JLabel lbPlayerCard5;
    private javax.swing.JLabel lbPlayerCard6;
    private javax.swing.JLabel lbPot;
    private javax.swing.JLabel lbPotValue;
    private javax.swing.JPanel pnlDealerHand;
    private javax.swing.JPanel pnlMessage;
    private javax.swing.JPanel pnlPlayerHand;
    // End of variables declaration//GEN-END:variables
}
